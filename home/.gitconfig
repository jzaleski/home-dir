[alias]
  amend = commit --amend
  ann = annotate
  br = branch
  ci = commit
  co = checkout
  del = rm
  delete = rm
  exclude = !sh -c 'mkdir -p .git/info && echo "$1" >> .git/info/exclude' -
  fput = push -f -u origin HEAD
  h = help
  ignore = update-index --assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"
  move = mv
  optimize = "!f() { git gc --aggressive --prune --quiet; }; f"
  praise = blame
  put = push -u origin HEAD
  rb = rebase
  rem = rm
  remove = rm
  ren = mv
  rename = mv
  root = rev-parse --show-toplevel
  rmbr = "!f() { git rmbranch \"$1\"; }; f"
  rmbranch = "!f() { git rmlocalbranch \"$1\"; git rmremotebranch \"$1\"; }; f"
  rmlocalbr = "!f() { git branch -D \"$1\"; }; f"
  rmlocalbranch = "!f() { git branch -D \"$1\"; }; f"
  rmlocaltag = "!f() { git tag -d \"$1\"; }; f"
  rmremotebr = "!f() { git push origin :heads/$1; }; f"
  rmremotebranch = "!f() { git push origin :heads/$1; }; f"
  rmremotetag = "!f() { git push origin :refs/tags/$1; }; f"
  rmsubmodule = "!f() { git rm --cached \"$1\"; rm -r \"$1\";git config -f .gitmodules --remove-section \"submodule.$1\"; git config -f .git/config --remove-section \"submodule.$1\"; git add .gitmodules; }; f"
  rmtag = "!f() { git rmlocaltag \"$1\"; git rmremotetag \"$1\"; }; f"
  st = status
  stat = status
  tree = "!f() { git log --graph --oneline --branches; }; f"
  unci = reset HEAD^
  uncommit = reset HEAD^
  unignore = update-index --no-assume-unchanged
  unst = reset HEAD
  unstage = reset HEAD
  update-submodules = "!f() { git submodule update --recursive --remote; }; f"
[apply]
  whitespace = nowarn
[branch]
  autosetuprebase = always
[branch "master"]
  rebase = true
[color]
  ui = true
[core]
  editor = vim
  excludesfile = ~/.gitignore
  fscache = true
  preloadindex = true
[fetch]
  prune = true
[init]
  defaultBranch = master
  templatedir = ~/.git_template
[push]
  default = tracking
